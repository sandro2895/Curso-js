criando um erro em python:

class TooManyPagesReadError(ValueError):  Isso faz TooManyPagesReadError herdar o erro ValueError.
    pass

class Book:
    def __init__(self, name: str, page_count: int):
        self.name = name
        self.page_count = page_count
        self.pages_read = 0

    def __repr__(self):
        return (
            f"Book <{self.name}, read {self.pages_read} page out of {self.page_count}> "
        )

    def read(self, pages: int):
        if self.pages_read + pages > self.page_count:  <--Aqui é caso  pages_read + pages for maior que page_count.
            raise TooManyPagesReadError(   <--raise também faz um return
                f"You tried to read {self.pages_read + pages} pages, but this book only has {self.page_count} pages."
            )
        self.pages_read += pages
        print(f"You have now read {self.pages_read} pages out of {self.page_count}")


python101 = Book("Python 101", 60)
python101.read(50)   <--Aqui está usando a função read para chegar ate 60
python101.read(10)
python101.read(5)


Pode ser feito tambem como:

try:
   python101.read(35)
   python101.read(50)

except TooManyPagesReadError as e:  <--Depois que foi criado como erro TooManyPagesReadError pode ser chamado. e como 'e também no raise.
   print(e)

